{"version":3,"sources":["Login/login.js","SignUp/signup.js","UserPage/userpage.js","App.js","index.js"],"names":["axios","require","Login","props","useState","userInfo","setUserInfo","loginError","setLoginError","handleSumit","e","a","post","loginResponse","console","log","data","message","localStorage","setItem","JSON","stringify","history","replace","className","type","onChange","email","target","value","password","for","onClick","to","Signup","username","repassword","fnameError","setFnameError","emailError","setEmailError","passwordError","setPasswordError","repasswordError","setrepasswordError","isValid","setIsValid","handleSignUp","handleValidate","length","field","undefined","includes","UserPage","parse","getItem","colorScheme","variant","fontSize","App","Component","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d67ab6ed.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState, useContext } from \"react\";\r\nimport { Button, ButtonGroup } from \"@chakra-ui/react\";\r\nimport { Input } from \"@chakra-ui/react\";\r\nimport { Radio, RadioGroup } from \"@chakra-ui/react\";\r\nimport { Heading } from \"@chakra-ui/react\";\r\nimport \"./login.css\";\r\nimport UserContext from \"../context/userContext.js\";\r\nimport { Link } from \"react-router-dom\";\r\nconst axios = require(\"axios\");\r\n\r\nconst Login = (props) => {\r\n  const [userInfo, setUserInfo] = useState({});\r\n  let [loginError, setLoginError] = useState(\"\");\r\n\r\n  let handleSumit = async (e) => {\r\n    const loginResponse = await axios.post(\r\n      \"https://ensveee.herokuapp.com/login\",\r\n      userInfo\r\n    );\r\n    console.log(loginResponse.data.message);\r\n\r\n    // console.log(loginResponse.data.accessToken);\r\n    if (loginResponse.data.message === \"Verified\") {\r\n      localStorage.setItem(\"auth-token\", JSON.stringify(loginResponse));\r\n      props.history.replace(\"/userpage\");\r\n    } else {\r\n      setLoginError(\"Invalid email / password\");\r\n      console.log(loginError)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign-in-big-div\">\r\n      <div className=\"sign-in-main-div\">\r\n        <Heading className=\"sign-in-head\">Sign In</Heading>\r\n        <p className=\"welcome-text\">Welcome we missed you</p>\r\n        <input\r\n          type=\"text\"\r\n          className=\"sign-in-input-email\"\r\n          onChange={(e) => setUserInfo({ ...userInfo, email: e.target.value })}\r\n        ></input>\r\n        <p className=\"lable-text-email\">Your Email</p>\r\n        <input\r\n          type=\"password\"\r\n          className=\"sign-in-input-password\"\r\n          onChange={(e) =>\r\n            setUserInfo({ ...userInfo, password: e.target.value })\r\n          }\r\n        ></input>\r\n        <p className=\"lable-text-password\">Password</p>\r\n        <input type=\"radio\" className=\"remember-me\"></input>\r\n        <p className=\"error\">{loginError}</p>\r\n        <label for=\"html\" className=\"remember-me-text\">\r\n          Remember me\r\n        </label>\r\n        <p className=\"forgot-password\">Forgot Password</p>\r\n        <button className=\"btn\" onClick={handleSumit}>\r\n          Sign In\r\n        </button>\r\n        <div className=\"line1\"></div>\r\n        <p className=\"or-continue-with\">or continue with</p>\r\n        <div className=\"line2\"></div>\r\n      </div>\r\n      <div className=\"sign-in-right-div\">\r\n        <p>\r\n          <Link to=\"/signup\" className=\"go-to-signup\">\r\n            Donâ€™t have an account? Click here\r\n          </Link>\r\n        </p>\r\n      </div>\r\n      <button className=\"btn2\">Sign in with Steam</button>\r\n      <button className=\"btn3\"></button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Heading } from \"@chakra-ui/react\";\r\nimport { useState, useContext } from \"react\";\r\nimport \"./signup.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserContext from \"../context/userContext.js\";\r\n\r\nconst axios = require(\"axios\");\r\nconst Signup = (props) => {\r\n  const [userInfo, setUserInfo] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    repassword: \"\",\r\n  });\r\n  const [fnameError, setFnameError] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const [repasswordError, setrepasswordError] = useState(\"\");\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  let handleSignUp = async () => {\r\n    console.log(userInfo);\r\n    handleValidate(\"fname\", userInfo.username);\r\n    handleValidate(\"email\", userInfo.email);\r\n    handleValidate(\"password\", userInfo.password);\r\n    handleValidate(\"repassword\", userInfo.repassword);\r\n\r\n    if (\r\n      userInfo.username.length > 0 &&\r\n      userInfo.email.length > 0 &&\r\n      userInfo.password.length > 0 &&\r\n      userInfo.repassword.length > 0 &&\r\n      fnameError.length +\r\n        emailError.length +\r\n        passwordError.length +\r\n        repasswordError.length ==\r\n        0\r\n    ) {\r\n      console.log(\"Valid Details\");\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n    if (isValid) {\r\n      await axios.post(\"https://ensveee.herokuapp.com/signup\", userInfo);\r\n      props.history.replace(\"/\");\r\n    }\r\n  };\r\n\r\n  let handleValidate = (field, value) => {\r\n    if (value == undefined) value = \"\";\r\n    console.log(field);\r\n    if (field == \"fname\") {\r\n      if (userInfo.username.length <= 0) {\r\n        setFnameError(\"Invalid Name\");\r\n        console.log(fnameError);\r\n      } else {\r\n        setFnameError(\"\");\r\n      }\r\n    } else if (field == \"email\") {\r\n      if (userInfo.email.length > 0 && !userInfo.email.includes(\"@\")) {\r\n        setEmailError(\"Invalid Email\");\r\n        console.log(emailError);\r\n      } else {\r\n        setEmailError(\"\");\r\n      }\r\n    } else if (field == \"password\") {\r\n      if (userInfo.password.length > 0 && userInfo.password.length < 8) {\r\n        setPasswordError(\"Your password length is less than 8\");\r\n        console.log(passwordError);\r\n      } else {\r\n        setPasswordError(\"\");\r\n      }\r\n    } else if (field == \"repassword\") {\r\n      if (\r\n        userInfo.repassword.length > 0 &&\r\n        userInfo.repassword !== userInfo.password\r\n      ) {\r\n        setrepasswordError(\"Doesn't match with password\");\r\n        console.log(repasswordError);\r\n      } else {\r\n        setrepasswordError(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign-up-big-div\">\r\n      <div className=\"sign-up-main-div\">\r\n        <Heading className=\"sign-up-head\">Sign Up</Heading>\r\n        <p className=\"sign-up-welcome-text\">Dont have an account?</p>\r\n\r\n        <p className=\"sign-up-lable-text-fname\">Full Name</p>\r\n        <input\r\n          type=\"text\"\r\n          className=\"fname-input\"\r\n          onChange={(e) =>\r\n            setUserInfo({ ...userInfo, username: e.target.value })\r\n          }\r\n        ></input>\r\n\r\n        <p className=\"error-fname\">{fnameError}</p>\r\n\r\n        <p className=\"sign-up-lable-text-email\">Your Email</p>\r\n        <input\r\n          type=\"text\"\r\n          className=\"email-input\"\r\n          onChange={(e) => setUserInfo({ ...userInfo, email: e.target.value })}\r\n        ></input>\r\n\r\n        <p className=\"error-email\">{emailError}</p>\r\n\r\n        <p className=\"sign-up-lable-text-password\">Password</p>\r\n        <input\r\n          type=\"password\"\r\n          className=\"password-input\"\r\n          onChange={(e) =>\r\n            setUserInfo({ ...userInfo, password: e.target.value })\r\n          }\r\n        ></input>\r\n\r\n        <p className=\"error-password\">{passwordError}</p>\r\n\r\n        <p className=\"sign-up-lable-text-rpassword\">Repeat Password</p>\r\n        <input\r\n          type=\"password\"\r\n          className=\"repassword-input\"\r\n          onChange={(e) =>\r\n            setUserInfo({ ...userInfo, repassword: e.target.value })\r\n          }\r\n        ></input>\r\n\r\n        <p className=\"error-repassword\">{repasswordError}</p>\r\n\r\n        <button className=\"sign-up-btn\" onClick={handleSignUp}>\r\n          Sign Up\r\n        </button>\r\n      </div>\r\n      <div className=\"sign-up-right-div\">\r\n        <p>\r\n          <Link to=\"/\" className=\"go-to-login\">\r\n            I have an account! Click here\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport \"./userpage.css\";\r\nimport { Heading } from \"@chakra-ui/react\";\r\nimport { Text } from \"@chakra-ui/react\";\r\nimport { Button, ButtonGroup } from \"@chakra-ui/react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Login from \"../Login/login\"\r\n\r\nconst UserPage = (props) => {\r\n  let userInfo = JSON.parse(localStorage.getItem(\"auth-token\"));\r\n  console.log(userInfo)\r\n  let handleLogout = () => {\r\n    localStorage.setItem(\"auth-token\", \"\");\r\n    props.history.replace(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n       {userInfo ? <div>\r\n        <Button\r\n        colorScheme=\"teal\"\r\n        variant=\"outline\"\r\n        className=\"user-page-btn\"\r\n        onClick={handleLogout}\r\n      >\r\n        Log Out\r\n      </Button>\r\n      <Heading>Welcome back {userInfo.data.username}!</Heading>\r\n      <Text fontSize=\"xl\">\r\n        This is your profile page.Enjoy your time here :D\r\n      </Text>\r\n\r\n       </div> : <Login />}\r\n    \r\n     \r\n    \r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import * as React from \"react\";\nimport Login from \"./Login/login\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport Signup from \"./SignUp/signup\";\nimport UserPage from \"./UserPage/userpage\";\nimport { BrowserRouter as Router, Route, Link, Routes,Switch } from \"react-router-dom\";\n\nfunction App({ Component }) {\n  return (\n    <ChakraProvider>\n      <Router>\n        <Switch>\n          <Route path=\"/\" component={Login} exact />\n          <Route path=\"/signup\" component={Signup} exact />\n          <Route path=\"/userpage\" component={UserPage} exact />\n        </Switch>\n      </Router>\n    </ChakraProvider>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}